---
- name: Security Settings For Debian
  block:
    - name: Allow TCP Ports
      iptables:
        chain: INPUT
        rule_num: '1'
        action: insert
        protocol: tcp
        jump: ACCEPT
        destination_port: "{{ item }}"
      loop: [ '9090', '9093', '9094', '9100' ]

    - name: Allow UDP Ports
      iptables:
        chain: INPUT
        rule_num: '1'
        action: insert
        protocol: udp
        jump: ACCEPT
        destination_port: '9094'

#____________________________________________________________________

- name: Create User prometheus
  user:
    name: prometheus
    create_home: no
    shell: /bin/false

- name: Create directories for prometheus
  file:
    path: "{{ item }}"
    state: directory
    owner: prometheus
    group: prometheus
  loop:
    - '/tmp/prometheus'
    - '/etc/prometheus'
    - '/var/lib/prometheus'

- name: Download And Unzipped Prometheus
  unarchive:
    src: https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-amd64.tar.gz
    dest: /tmp/prometheus
    creates: /tmp/prometheus/prometheus-{{ prometheus_version }}.linux-amd64
    remote_src: yes

- name: Copy Bin Files From Unzipped to Prometheus
  copy:
    src: /tmp/prometheus/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}
    dest: /usr/local/bin/
    remote_src: yes
    mode: preserve
    owner: prometheus
    group: prometheus
  loop: [ 'prometheus', 'promtool' ]

- name: Copy Conf Files From Unzipped to Prometheus
  copy:
    src: /tmp/prometheus/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}
    dest: /etc/prometheus/
    remote_src: yes
    mode: preserve
    owner: prometheus
    group: prometheus
  loop: [ 'console_libraries', 'consoles', 'prometheus.yml' ]

- name: Copy My Conf for Prometheus
  template:
    src: templates/prometheus.yml
    dest: /etc/prometheus/
  notify:
    - systemd reload

- name: Create File for Prometheus Systemd
  template:
    src=templates/prometheus.service
    dest=/etc/systemd/system/
  notify:
    - systemd reload

- name: Systemctl Prometheus Start
  systemd:
    name: prometheus
    state: started
    enabled: yes

#____________________________________________________________________
- name: Create User Alertmanager
  user:
    name: alertmanager
    create_home: no
    shell: /bin/false

- name: Create Directories For Alertmanager
  file:
    path: "{{ item }}"
    state: directory
    owner: alertmanager
    group: alertmanager
  loop:
    - '/tmp/alertmanager'
    - '/etc/alertmanager'
    - '/var/lib/prometheus/alertmanager'

- name: Download And Unzipped Alertmanager
  unarchive:
    src: https://github.com/prometheus/alertmanager/releases/download/v{{ alertmanager_version }}/alertmanager-{{ alertmanager_version }}.linux-amd64.tar.gz
    dest: /tmp/alertmanager
    creates: /tmp/alertmanager/alertmanager-{{ alertmanager_version }}.linux-amd64
    remote_src: yes

- name: Copy Bin Files From Unzipped to Alertmanager
  copy:
    src: /tmp/alertmanager/alertmanager-{{ alertmanager_version }}.linux-amd64/{{ item }}
    dest: /usr/local/bin/
    remote_src: yes
    mode: preserve
    owner: alertmanager
    group: alertmanager
  loop: [ 'alertmanager', 'amtool' ]

#- name: Copy Conf File From Unzipped to Alertmanager
#  copy:
#    src: /tmp/alertmanager/alertmanager-{{ alertmanager_version }}.linux-amd64/alertmanager.yml
#    dest: /etc/alertmanager/
#    remote_src: yes
#    mode: preserve
#    owner: alertmanager
#    group: alertmanager

- name: Create File for Alertmanager Systemd
  template:
    src: templates/alertmanager.service
    dest: /etc/systemd/system/
  notify:
    - systemd reload

#- name: Create File for Alertmanager
#  copy:
#    src: templates/alertmanager.yml
#    dest: /etc/prometheus/alertmanager.yml
#  notify:
#    - systemd reload

- name: Create File for Alertmanager
  copy:
    src: templates/alertmanager.yml
    dest: /etc/alertmanager/alertmanager.yml
    owner: alertmanager
    group: alertmanager
  notify:
    - systemd reload
  tags: alert

- name: Create File alert rules
  copy:
    src: templates/alert_rules.yml
    dest: /etc/prometheus/alert_rules.yml
  notify:
    - systemd reload

- name: Systemctl Alertmanager Start
  systemd:
    name: alertmanager
    state: started
    enabled: yes
